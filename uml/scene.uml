<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:PapyrusJava="http://www.eclipse.org/papyrus/PapyrusJava/1" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_O8ENUJkDEemn3_zQK2YHHw" name="scene">
    <packageImport xmi:type="uml:PackageImport" xmi:id="_PAtcwJkDEemn3_zQK2YHHw">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_TzUQIJkDEemn3_zQK2YHHw" name="projeto-lp2019">
      <packagedElement xmi:type="uml:Package" xmi:id="_Tz5e8JkDEemn3_zQK2YHHw" name="ismt">
        <packagedElement xmi:type="uml:Package" xmi:id="_Tz6GAJkDEemn3_zQK2YHHw" name="application">
          <packagedElement xmi:type="uml:Package" xmi:id="_Tz6tEJkDEemn3_zQK2YHHw" name="scene">
            <packagedElement xmi:type="uml:Class" xmi:id="_T3atAJkDEemn3_zQK2YHHw" name="MaxDistanceScene" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_T3gMkJkDEemn3_zQK2YHHw" name="sceneGraph" visibility="private" isStatic="true" type="_T3ciMJkDEemn3_zQK2YHHw" isUnique="false">
                <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_T3hasJkDEemn3_zQK2YHHw" name="defaultValue">
                  <language>JAVA</language>
                  <body>null</body>
                </defaultValue>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T3nhUJkDEemn3_zQK2YHHw" name="buildScene" specification="_T3jP4JkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    // Build pane&#xD;
    StackPane root_stack = new StackPane();&#xD;
    /** Build specific task scene 
		 * 
		 * 
		 * 
		 */&#xD;
    // init user db to store users&#xD;
    UserDB userDB = new UserDB();&#xD;
    // Get data from JSON file&#xD;
    try {&#xD;
        userDB = Utils.getAllUsers();&#xD;
    } catch (IOException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    ArrayList&lt;User> allUsers = userDB.getUsers();&#xD;
    // Obtain users' data&#xD;
    final ObservableList&lt;User> data = FXCollections.observableArrayList(userDB.getUsers());&#xD;
    // Init Graph&#xD;
    sceneGraph = InitGraph(allUsers);&#xD;
    // Init Layout&#xD;
    TableView&lt;User> table1 = CreateTable(data, &quot;name&quot;);&#xD;
    TableView&lt;User> table2 = CreateTable(data, &quot;name&quot;);&#xD;
    final Label resultsLabel = new Label();&#xD;
    resultsLabel.setFont(new Font(&quot;Arial&quot;, 50));&#xD;
    final VBox vbox_left_table = new VBox();&#xD;
    vbox_left_table.setSpacing(5);&#xD;
    vbox_left_table.setPadding(new Insets(10, 0, 0, 10));&#xD;
    vbox_left_table.getChildren().addAll(table1);&#xD;
    final VBox vboxright_table = new VBox();&#xD;
    vboxright_table.setSpacing(5);&#xD;
    vboxright_table.setPadding(new Insets(200, 0, 0, 10));&#xD;
    vboxright_table.getChildren().addAll(table2, resultsLabel);&#xD;
    Button calc_result_button = new Button(&quot;Calculate&quot;);&#xD;
    // Assign action to button click&#xD;
    calc_result_button.setOnAction((ActionEvent event) -> {&#xD;
        User user1 = table1.getSelectionModel().getSelectedItem();&#xD;
        User user2 = table2.getSelectionModel().getSelectedItem();&#xD;
        if (user1 != null &amp;&amp; user2 != null) {&#xD;
            String result = (&quot;A distancia entre os utilizador &quot; + user1.getName() + &quot; e &quot; + user2.getName() + &quot; Ã© de &quot; + Integer.toString(CalculateMaxDistance(user1, user2)));&#xD;
            resultsLabel.setText(result);&#xD;
        }&#xD;
    });&#xD;
    root_stack.getChildren().addAll(vbox_left_table, vboxright_table);&#xD;
    Button button_to_back = new Button(&quot;Back&quot;);&#xD;
    button_to_back.setOnAction((ActionEvent event) -> {&#xD;
        primaryStage.setScene(sceneMain);&#xD;
    });&#xD;
    HBox pane_for_buttons = new HBox(16);&#xD;
    pane_for_buttons.getChildren().addAll(calc_result_button, button_to_back);&#xD;
    pane_for_buttons.setAlignment(Pos.CENTER);&#xD;
    pane_for_buttons.setPadding(new Insets(0, 0, 20, 0));&#xD;
    BorderPane border_pane = new BorderPane();&#xD;
    border_pane.setBottom(pane_for_buttons);&#xD;
    root_stack.getChildren().addAll(border_pane);&#xD;
    Scene tempScene = new Scene(root_stack, APP_WIDTH, APP_HEIGHT);&#xD;
    root_stack.setBackground(null);&#xD;
    tempScene.getStylesheets().add(resourceFolder + &quot;/play.css&quot;);&#xD;
    return tempScene;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T3vdIJkDEemn3_zQK2YHHw" name="CalculateMaxDistance" specification="_T3sZ0JkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    if (sceneGraph != null) {&#xD;
        return sceneGraph.longestPathBetweenUsers(user1, user2);&#xD;
    }&#xD;
    return 0;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T31jwJkDEemn3_zQK2YHHw" name="InitGraph" specification="_T3xSUJkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    Graph g = new Graph(allUsers.size());&#xD;
    for (User user : allUsers) {&#xD;
        ArrayList&lt;Connection> connections = user.getConnections();&#xD;
        if (connections != null) {&#xD;
            for (Connection conn : connections) {&#xD;
                g.addEdge(conn.getUserID1(), conn.getUserID2());&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    return g;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T4FbYJkDEemn3_zQK2YHHw" name="CreateTable" specification="_T38RcJkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    TableView&lt;User> table = new TableView&lt;User>();&#xD;
    table.setEditable(true);&#xD;
    TableColumn&lt;User, String> nameCol = new TableColumn&lt;>(columnName);&#xD;
    table.getColumns().add(nameCol);&#xD;
    nameCol.setCellValueFactory(new PropertyValueFactory&lt;User, String>(columnName));&#xD;
    table.setItems(data);&#xD;
    table.setFixedCellSize(32);&#xD;
    table.prefHeightProperty().bind(table.fixedCellSizeProperty().multiply(Bindings.size(table.getItems())));&#xD;
    return table;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_T3jP4JkDEemn3_zQK2YHHw" name="buildScene" visibility="public" method="_T3nhUJkDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T3keAJkDEemn3_zQK2YHHw" type="_T2XkIJkDEemn3_zQK2YHHw" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T3lFEJkDEemn3_zQK2YHHw" name="primaryStage" type="_T2T5wJkDEemn3_zQK2YHHw"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T3mTMJkDEemn3_zQK2YHHw" name="sceneMain" type="_T2XkIJkDEemn3_zQK2YHHw"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_T3sZ0JkDEemn3_zQK2YHHw" name="CalculateMaxDistance" visibility="private" method="_T3vdIJkDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T3tA4JkDEemn3_zQK2YHHw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedParameter>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T3tn8JkDEemn3_zQK2YHHw" name="user1" type="_T3pWgJkDEemn3_zQK2YHHw"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T3u2EJkDEemn3_zQK2YHHw" name="user2" type="_T3pWgJkDEemn3_zQK2YHHw"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_T3xSUJkDEemn3_zQK2YHHw" name="InitGraph" visibility="private" method="_T31jwJkDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T3ygcJkDEemn3_zQK2YHHw" type="_T3ciMJkDEemn3_zQK2YHHw" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T3zukJkDEemn3_zQK2YHHw" name="allUsers" type="_T3pWgJkDEemn3_zQK2YHHw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T30VoJkDEemn3_zQK2YHHw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T308sJkDEemn3_zQK2YHHw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_T38RcJkDEemn3_zQK2YHHw" name="CreateTable" visibility="private" method="_T4FbYJkDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4BJ8JkDEemn3_zQK2YHHw" type="_T3-GoJkDEemn3_zQK2YHHw" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4CYEJkDEemn3_zQK2YHHw" name="data" type="_T34AAJkDEemn3_zQK2YHHw"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4ENQJkDEemn3_zQK2YHHw" name="columnName" type="_T0UVsJkDEemn3_zQK2YHHw"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_T3ciMJkDEemn3_zQK2YHHw" name="Graph" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_T4MJEJkDEemn3_zQK2YHHw" name="V" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_T4RooJkDEemn3_zQK2YHHw" name="adj" visibility="private" type="_T4N-QJkDEemn3_zQK2YHHw" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_T4S2wJkDEemn3_zQK2YHHw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_T4Td0JkDEemn3_zQK2YHHw" value="*"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T4YWUJkDEemn3_zQK2YHHw" name="Graph" specification="_T4UE4JkDEemn3_zQK2YHHw">
                  <language>JAVA</language>
                  <body>&#xD;
    this.V = V;&#xD;
    adj = new LinkedList[V];&#xD;
    for (int i = 0; i &lt; V; ++i) {&#xD;
        adj[i] = new LinkedList&lt;Integer>();&#xD;
    }&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T4cnwJkDEemn3_zQK2YHHw" name="addEdge" specification="_T4ZkcJkDEemn3_zQK2YHHw">
                  <language>JAVA</language>
                  <body>&#xD;
    adj[s].add(d);&#xD;
    adj[d].add(s);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T4j8gJkDEemn3_zQK2YHHw" name="bfs" specification="_T4d14JkDEemn3_zQK2YHHw">
                  <language>JAVA</language>
                  <body>&#xD;
    int[] distance = new int[V];&#xD;
    // todas as distancias ficam a um&#xD;
    Arrays.fill(distance, -1);&#xD;
    Queue&lt;Integer> queue = new LinkedList&lt;>();&#xD;
    queue.add(firstNode);&#xD;
    // distancia de u a u Ã© 0&#xD;
    distance[firstNode] = 0;&#xD;
    while (!queue.isEmpty()) {&#xD;
        int topNode = queue.poll();&#xD;
        // loop por todos os nodos adjacentes&#xD;
        for (int i = 0; i &lt; adj[topNode].size(); ++i) {&#xD;
            int vertice = adj[topNode].get(i);&#xD;
            if (distance[vertice] == -1) {&#xD;
                queue.add(vertice);&#xD;
                distance[vertice] = distance[topNode] + 1;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    int maxDis = 0;&#xD;
    int nodeIdx = 0;&#xD;
    // nodo mais distante e index&#xD;
    for (int i = 0; i &lt; V; ++i) {&#xD;
        if (distance[i] > maxDis) {&#xD;
            maxDis = distance[i];&#xD;
            nodeIdx = i;&#xD;
        }&#xD;
    }&#xD;
    return new Pair&lt;Integer, Integer>(nodeIdx, maxDis);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T4qDIJkDEemn3_zQK2YHHw" name="bfsToUser" specification="_T4lxsJkDEemn3_zQK2YHHw">
                  <language>JAVA</language>
                  <body>&#xD;
    int[] dis = new int[V];&#xD;
    Arrays.fill(dis, -1);&#xD;
    Queue&lt;Integer> q = new LinkedList&lt;>();&#xD;
    q.add(u1);&#xD;
    dis[u1] = 0;&#xD;
    while (!q.isEmpty()) {&#xD;
        int t = q.poll();&#xD;
        for (int i = 0; i &lt; adj[t].size(); ++i) {&#xD;
            int v = adj[t].get(i);&#xD;
            if (dis[v] == -1) {&#xD;
                q.add(v);&#xD;
                dis[v] = dis[t] + 1;&#xD;
            }&#xD;
        }&#xD;
    }&#xD;
    int maxDis = 0;&#xD;
    int nodeIdx = 0;&#xD;
    for (int i = 0; i &lt; V; ++i) {&#xD;
        if (dis[i] > maxDis &amp;&amp; i == u2) {&#xD;
            maxDis = dis[i];&#xD;
            nodeIdx = i;&#xD;
        }&#xD;
    }&#xD;
    return new Pair&lt;Integer, Integer>(nodeIdx, maxDis);&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T4r4UJkDEemn3_zQK2YHHw" name="longestPathLength" specification="_T4rRQJkDEemn3_zQK2YHHw">
                  <language>JAVA</language>
                  <body>&#xD;
    Pair&lt;Integer, Integer> t1, t2;&#xD;
    // um dos finais do maior caminho&#xD;
    t1 = bfs(0);&#xD;
    // segundo bfs para encontrar o maior caminho real &#xD;
    t2 = bfs(t1.getValue());&#xD;
    return t1.getValue();&#xD;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_T4wJwJkDEemn3_zQK2YHHw" name="longestPathBetweenUsers" specification="_T4tGcJkDEemn3_zQK2YHHw">
                  <language>JAVA</language>
                  <body>&#xD;
    return bfsToUser(u1.getUserID(), u2.getUserID()).getValue();&#xD;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_T4UE4JkDEemn3_zQK2YHHw" name="Graph" visibility="public" method="_T4YWUJkDEemn3_zQK2YHHw">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4XIMJkDEemn3_zQK2YHHw" name="V">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_T4ZkcJkDEemn3_zQK2YHHw" name="addEdge" visibility="public" method="_T4cnwJkDEemn3_zQK2YHHw">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4aykJkDEemn3_zQK2YHHw" name="s">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4cAsJkDEemn3_zQK2YHHw" name="d">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_T4d14JkDEemn3_zQK2YHHw" name="bfs" visibility="public" method="_T4j8gJkDEemn3_zQK2YHHw">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4iuYJkDEemn3_zQK2YHHw" type="_T4fEAJkDEemn3_zQK2YHHw" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4jVcJkDEemn3_zQK2YHHw" name="firstNode">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_T4lxsJkDEemn3_zQK2YHHw" name="bfsToUser" visibility="public" method="_T4qDIJkDEemn3_zQK2YHHw">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4m_0JkDEemn3_zQK2YHHw" type="_T4fEAJkDEemn3_zQK2YHHw" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4nm4JkDEemn3_zQK2YHHw" name="u1">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4o1AJkDEemn3_zQK2YHHw" name="u2">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_T4rRQJkDEemn3_zQK2YHHw" name="longestPathLength" visibility="public" method="_T4r4UJkDEemn3_zQK2YHHw">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4rRQZkDEemn3_zQK2YHHw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_T4tGcJkDEemn3_zQK2YHHw" name="longestPathBetweenUsers" visibility="public" method="_T4wJwJkDEemn3_zQK2YHHw">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4ttgJkDEemn3_zQK2YHHw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4u7oJkDEemn3_zQK2YHHw" name="u1" type="_T3pWgJkDEemn3_zQK2YHHw"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_T4visJkDEemn3_zQK2YHHw" name="u2" type="_T3pWgJkDEemn3_zQK2YHHw"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_voVPMJkDEemn3_zQK2YHHw" name="engine">
            <packagedElement xmi:type="uml:Class" xmi:id="_voWdUJkDEemn3_zQK2YHHw" name="UserDB" visibility="public">
              <ownedAttribute xmi:type="uml:Property" xmi:id="_vofnQZkDEemn3_zQK2YHHw" name="users" visibility="private" type="_voXEYJkDEemn3_zQK2YHHw" isUnique="false">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vogOUJkDEemn3_zQK2YHHw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vogOUZkDEemn3_zQK2YHHw" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vodLAJkDEemn3_zQK2YHHw" name="UserDB" specification="_voZgoJkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    super();&#xD;
    this.users = users;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vofnQJkDEemn3_zQK2YHHw" name="UserDB" specification="_vodLAZkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    super();&#xD;
    this.users = new ArrayList&lt;User>();&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vog1Y5kDEemn3_zQK2YHHw" name="getUsers" specification="_vogOUpkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    return users;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_voiqkpkDEemn3_zQK2YHHw" name="setUsers" specification="_vohccJkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    this.users = users;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_voj4sZkDEemn3_zQK2YHHw" name="insertUser" specification="_vojRoJkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    this.users.add(user);&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_volt4JkDEemn3_zQK2YHHw" name="removeUser" specification="_vokfwJkDEemn3_zQK2YHHw">
                <language>JAVA</language>
                <body>&#xD;
    this.users.remove(user);&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_voZgoJkDEemn3_zQK2YHHw" name="UserDB" visibility="public" method="_vodLAJkDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_vocj8JkDEemn3_zQK2YHHw" name="users" type="_voXEYJkDEemn3_zQK2YHHw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vocj8ZkDEemn3_zQK2YHHw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vocj8pkDEemn3_zQK2YHHw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_vodLAZkDEemn3_zQK2YHHw" name="UserDB" visibility="public" method="_vofnQJkDEemn3_zQK2YHHw"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_vogOUpkDEemn3_zQK2YHHw" name="getUsers" visibility="public" method="_vog1Y5kDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_vog1YJkDEemn3_zQK2YHHw" type="_voXEYJkDEemn3_zQK2YHHw" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vog1YZkDEemn3_zQK2YHHw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vog1YpkDEemn3_zQK2YHHw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_vohccJkDEemn3_zQK2YHHw" name="setUsers" visibility="public" method="_voiqkpkDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_voiDgJkDEemn3_zQK2YHHw" name="users" type="_voXEYJkDEemn3_zQK2YHHw">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_voiqkJkDEemn3_zQK2YHHw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_voiqkZkDEemn3_zQK2YHHw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_vojRoJkDEemn3_zQK2YHHw" name="insertUser" visibility="public" method="_voj4sZkDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_voj4sJkDEemn3_zQK2YHHw" name="user" type="_voXEYJkDEemn3_zQK2YHHw"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_vokfwJkDEemn3_zQK2YHHw" name="removeUser" visibility="public" method="_volt4JkDEemn3_zQK2YHHw">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_volG0JkDEemn3_zQK2YHHw" name="user" type="_voXEYJkDEemn3_zQK2YHHw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_voXEYJkDEemn3_zQK2YHHw" name="User"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_T0THkJkDEemn3_zQK2YHHw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_T0THkZkDEemn3_zQK2YHHw" name="java">
        <packagedElement xmi:type="uml:Package" xmi:id="_T0TuoJkDEemn3_zQK2YHHw" name="lang">
          <packagedElement xmi:type="uml:Class" xmi:id="_T0UVsJkDEemn3_zQK2YHHw" name="String"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_T4NXMJkDEemn3_zQK2YHHw" name="util">
          <packagedElement xmi:type="uml:Class" xmi:id="_T4N-QJkDEemn3_zQK2YHHw" name="LinkedList"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_T2I6oJkDEemn3_zQK2YHHw" name="importedTypes">
      <packagedElement xmi:type="uml:Package" xmi:id="_T2JhsJkDEemn3_zQK2YHHw" name="ismt">
        <packagedElement xmi:type="uml:Package" xmi:id="_T2JhsZkDEemn3_zQK2YHHw" name="application">
          <packagedElement xmi:type="uml:Package" xmi:id="_T2KIwJkDEemn3_zQK2YHHw" name="engine">
            <packagedElement xmi:type="uml:Class" xmi:id="_T2KIwZkDEemn3_zQK2YHHw" name="UserDB"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_T2NMEJkDEemn3_zQK2YHHw" name="MailboxDB"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_T3pWgJkDEemn3_zQK2YHHw" name="User"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_T2SroJkDEemn3_zQK2YHHw" name="javafx">
        <packagedElement xmi:type="uml:Package" xmi:id="_T2TSsJkDEemn3_zQK2YHHw" name="stage">
          <packagedElement xmi:type="uml:Class" xmi:id="_T2T5wJkDEemn3_zQK2YHHw" name="Stage"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_T2W9EJkDEemn3_zQK2YHHw" name="scene">
          <packagedElement xmi:type="uml:Class" xmi:id="_T2XkIJkDEemn3_zQK2YHHw" name="Scene"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_T39fkJkDEemn3_zQK2YHHw" name="control">
            <packagedElement xmi:type="uml:Class" xmi:id="_T3-GoJkDEemn3_zQK2YHHw" name="TableView"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_T33Y8JkDEemn3_zQK2YHHw" name="collections">
          <packagedElement xmi:type="uml:Class" xmi:id="_T34AAJkDEemn3_zQK2YHHw" name="ObservableList"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_T4ec8JkDEemn3_zQK2YHHw" name="util">
          <packagedElement xmi:type="uml:Class" xmi:id="_T4fEAJkDEemn3_zQK2YHHw" name="Pair"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_TzpAQJkDEemn3_zQK2YHHw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_TzpnUJkDEemn3_zQK2YHHw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/PapyrusJava/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PapyrusJava_PROFILES/PapyrusJava.profile.uml#_j9REUByGEduN1bTiWJ0lyw"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_Tz0mcJkDEemn3_zQK2YHHw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_Tz1NgJkDEemn3_zQK2YHHw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/Codegen/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://Codegen_PROFILES/Codegen.profile.uml#_fPDsIBa-EearhdjjJ6cVzQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_Tz2boJkDEemn3_zQK2YHHw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_Tz3CsJkDEemn3_zQK2YHHw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <PapyrusJava:External xmi:id="_T2FQQJkDEemn3_zQK2YHHw" name="java.lang.String" base_Classifier="_T0UVsJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T2L98JkDEemn3_zQK2YHHw" name="ismt.application.engine.UserDB" base_Classifier="_T2KIwZkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T2PoUJkDEemn3_zQK2YHHw" name="ismt.application.engine.MailboxDB" base_Classifier="_T2NMEJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T2Vu8JkDEemn3_zQK2YHHw" name="javafx.stage.Stage" base_Classifier="_T2T5wJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T2aAYJkDEemn3_zQK2YHHw" name="javafx.scene.Scene" base_Classifier="_T2XkIJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T3e-cJkDEemn3_zQK2YHHw" name="Graph" base_Classifier="_T3ciMJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T3rLsJkDEemn3_zQK2YHHw" name="ismt.application.engine.User" base_Classifier="_T3pWgJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T36cQJkDEemn3_zQK2YHHw" name="javafx.collections.ObservableList" base_Classifier="_T34AAJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T3_70JkDEemn3_zQK2YHHw" name="javafx.scene.control.TableView" base_Classifier="_T3-GoJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:StaticClassifier xmi:id="_T4K68JkDEemn3_zQK2YHHw" base_Classifier="_T3ciMJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T4QagJkDEemn3_zQK2YHHw" name="java.util.LinkedList" base_Classifier="_T4N-QJkDEemn3_zQK2YHHw"/>
  <standard:Create xmi:id="_T4V6EJkDEemn3_zQK2YHHw" base_BehavioralFeature="_T4UE4JkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_T4hgQJkDEemn3_zQK2YHHw" name="javafx.util.Pair" base_Classifier="_T4fEAJkDEemn3_zQK2YHHw"/>
  <PapyrusJava:External xmi:id="_voY5kJkDEemn3_zQK2YHHw" name="User" base_Classifier="_voXEYJkDEemn3_zQK2YHHw"/>
  <standard:Create xmi:id="_vobV0JkDEemn3_zQK2YHHw" base_BehavioralFeature="_voZgoJkDEemn3_zQK2YHHw"/>
  <standard:Create xmi:id="_vofAMJkDEemn3_zQK2YHHw" base_BehavioralFeature="_vodLAZkDEemn3_zQK2YHHw"/>
</xmi:XMI>
